"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addHeaders = exports.voilidatePath = exports.regx = exports.urlValidate = void 0;
var error_1 = require("../error/error");
var error_message_1 = require("../error/error-message");
var common_log_1 = require("../log-config/common-log");
var fs_1 = __importDefault(require("fs"));
//check http url
function urlValidate(url) {
    common_log_1.logger.info('step into method urlValidate');
    //Regular expression of the URL.
    var reg = /^(ht)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?/;
    var Sreg = /\s/g;
    if (url.match(Sreg)) {
        return false;
    }
    return regx(url, reg);
}
exports.urlValidate = urlValidate;
//Checks whether the regular expression is met
function regx(str, reg) {
    if (str.match(reg)) {
        common_log_1.logger.info('step into method  reg match in regx');
        return true;
    }
    return false;
}
exports.regx = regx;
function voilidatePath(url) {
    try {
        common_log_1.logger.info('step into method  voilidatePath');
        fs_1.default.statSync(url);
        return true;
    }
    catch (e) {
        common_log_1.logger.info('step into voilidatePath throw');
        throw new error_1.AGCError(error_message_1.ErrorCodeConstant.URL_NOT_EXSIT);
    }
}
exports.voilidatePath = voilidatePath;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function addHeaders(args1, args2) {
    common_log_1.logger.info('step into method addHeaders');
    return Object.assign(args1, args2);
}
exports.addHeaders = addHeaders;
