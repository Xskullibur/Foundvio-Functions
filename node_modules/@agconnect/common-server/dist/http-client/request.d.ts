export interface HttpClientCfg {
    timeout?: number;
    responseType?: string;
    maxBodyLength?: number;
    maxContentLength?: number;
    isEnableSSLCert?: boolean;
    casFile?: string[];
}
export interface HttpClientAPI {
    /**
     * This method is used to send a post request that calls the post request of Axios.
     *
     * @param  {string} url
     * @param  {any} params
     * @param  {any} data
     * @param  {any} headers
     * @return {Promise<any>}  return
     */
    post(url: string, data: any, params: any, headers: any): Promise<any>;
    /**
     * This method is used to send a get request that calls the get request of Axios.
     *
     * @param  {string} url
     * @param  {any} params
     * @param  {any} headers
     * @return {Promise<any>}  return
     */
    get(url: string, params: any, headers: any): Promise<any>;
    /**
     * This method is used to send a delete request that calls the delete request of Axios.
     *
     * @param  {string} url
     * @param  {any} params
     * @param  {any} headers
     * @return {Promise<any>}  return
     */
    delete(url: string, data: any, params: any, headers: any): Promise<any>;
    /**
     * This method is used to send a delete request that calls the delete request of Axios.
     *
     * @param  {string} url
     * @param  {any} params
     * @param  {any} data
     * @param  {any} headers
     * @return {Promise<any>}  return
     */
    put(url: string, data: any, params: any, headers: any): Promise<any>;
}
export declare class HttpClientAPIImpl implements HttpClientAPI {
    private static DEFAULT_TIMEOUT;
    private static DEFAULT_RESPONSE_TYPE;
    private instance;
    constructor(cfg?: HttpClientCfg);
    post(url: string, data: any, params: any, headers: any): Promise<any>;
    get(url: string, params: any, headers: any): Promise<any>;
    delete(url: string, data: any, params: any, headers: any): Promise<any>;
    put(url: string, data: any, params: any, headers: any): Promise<any>;
    private getReponseType;
    private send;
}
